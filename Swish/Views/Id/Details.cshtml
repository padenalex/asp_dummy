@using Swish.Authorization
@using Microsoft.AspNetCore.Authorization
@inject IAuthorizationService AuthorizationService
@model Swish.Models.VerificationProfile

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

<div>
    <h4>VerificationProfile</h4>
    <hr />
    <dl class="row">
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.FirstName)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.FirstName)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.LastName)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.LastName)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.FakeImgStr)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.FakeImgStr)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.OwnerId)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.OwnerId)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Status)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Status)
        </dd>
    </dl>
</div>
<br/>



@if (Model.Status != VerificationProfileStatus.Approved)
{
    @if ((await AuthorizationService.AuthorizeAsync(
        User, Model, UserOperations.Approve)).Succeeded)
    {
        <form style="display:inline;" method="post">
            <input type="hidden" name="id" value="@Model.Id" />
            <input type="hidden" name="status" value="@VerificationProfileStatus.Approved" />
            <button type="submit" class="btn btn-xs btn-success">Approve</button>
        </form>
    }
}




@if (Model.Status != VerificationProfileStatus.Rejected)
{
    @if ((await AuthorizationService.AuthorizeAsync(
        User, Model, UserOperations.Reject)).Succeeded)
    {
        <form style="display:inline;" method="post">
            <input type="hidden" name="id" value="@Model.Id" />
            <input type="hidden" name="status" value="@VerificationProfileStatus.Rejected" />
            <button type="submit" class="btn btn-xs btn-danger">Reject</button>
        </form>
    }
}

<div>
    @if ((await AuthorizationService.AuthorizeAsync(
        User, Model,
        UserOperations.Update)).Succeeded)
    {
        <br/>
        <a asp-action="Edit" asp-route-id="@Model.Id">Edit</a>
        <text> | </text>
    }
    <a asp-action="Index">Back to List</a>
</div>
